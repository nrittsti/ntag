name: "Build Release"

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  linux_release:
    runs-on: [ubuntu-latest]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Build Linux Version with Gradle
        id: build-linux
        run: ./gradlew jre build -Pplatform=linux -Ptests=Unit
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Get NTag version and release url
        run: |
          VERSION=$(./gradlew version -q)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo $VERSION > ntag_version.txt
      - name: Archive build artifact
        uses: actions/upload-artifact@v2
        with:
          name: release_infos
          path: |
            ntag_version.txt
      - name: Create SHA256 Checksum
        run: sha256sum ./build/distributions/ntag-${{ env.VERSION }}-linux_bin.tar.gz > ./build/distributions/ntag-${{ env.VERSION }}-linux_bin_sha256.txt
      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distributions/ntag-${{ env.VERSION }}-linux_bin.tar.gz
          asset_name: ntag-${{ env.VERSION }}-linux_bin.tar.gz
          asset_content_type: application/gzip
      - name: Upload Linux Checksum SHA256 Asset
        id: upload-linux-checksum-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distributions/ntag-${{ env.VERSION }}-linux_bin_sha256.txt
          asset_name: ntag-${{ env.VERSION }}-linux_bin_sha256.txt
          asset_content_type: application/text
  windows_release:
    needs: linux_release
    runs-on: [windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
          architecture: x64
      - name: Build Windows Version with Gradle
        id: build-windows
        run: ./gradlew jre build -x test -Pplatform=win
      - name: Download Linux job results
        uses: actions/download-artifact@v2
        with:
          name: release_infos
      - name: Get NTag Version and Release URL
        run: |
          echo "VERSION=$(cat ntag_version.txt)" >> $env:GITHUB_ENV
      - name: Create NSIS Installer
        run: |
          7z x -obuild/distributions ./build/distributions/ntag-${{ env.VERSION }}-win_bin.zip
          (Get-Content -Path ntag.nsi) -replace 'XXX', '${{ env.VERSION }}' | Add-Content -Path ./build/distributions/ntag-${{ env.VERSION }}/ntag.nsi
          cd ./build/distributions/ntag-${{ env.VERSION }}
          makensis ntag.nsi
      - name: Create SHA256 Checksums
        id: checksums
        run: |
          Get-Filehash ./build/distributions/ntag-${{ env.VERSION }}-win_bin.zip -Algorithm SHA256 | Format-List -Property Hash > ./build/distributions/ntag-${{ env.VERSION }}-win_bin_sha256.txt
          Get-Filehash ./build/distributions/ntag-${{ env.VERSION }}/NTag-${{ env.VERSION }}-win-setup.exe -Algorithm SHA256 | Format-List -Property Hash > ./build/distributions/ntag-${{ env.VERSION }}-win_setup_sha256.txt
      - name: Upload Windows ZIP Release Asset
        id: upload-win-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.linux_release.outputs.upload_url }}
          asset_path: ./build/distributions/ntag-${{ env.VERSION }}-win_bin.zip
          asset_name: ntag-${{ env.VERSION }}-win_bin.zip
          asset_content_type: application/gzip
      - name: Upload Windows ZIP SHA256 Asset
        id: upload-win-bin-sha256-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.linux_release.outputs.upload_url }}
          asset_path: ./build/distributions/ntag-${{ env.VERSION }}-win_bin_sha256.txt
          asset_name: ntag-${{ env.VERSION }}-win_bin_sha256.txt
          asset_content_type: application/text
      - name: Upload Windows Installer Asset
        id: upload-win-installer-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.linux_release.outputs.upload_url }}
          asset_path: ./build/distributions/ntag-${{ env.VERSION }}/NTag-${{ env.VERSION }}-win-setup.exe
          asset_name: ntag-${{ env.VERSION }}-win-setup.exe
          asset_content_type: application/gzip
      - name: Upload Windows Installer SHA256 Asset
        id: upload-win-installer-sha256-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.linux_release.outputs.upload_url }}
          asset_path: ./build/distributions/ntag-${{ env.VERSION }}-win_setup_sha256.txt
          asset_name: ntag-${{ env.VERSION }}-win_setup_sha256.txt
          asset_content_type: application/text
