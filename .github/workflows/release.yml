name: "Build Release"

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  linux_release:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Get NTag Version
        run: echo "VERSION=$(gradle properties -q | grep 'version:' | awk '{print $2}')" >> $GITHUB_ENV
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Build Linux Version with Gradle
        id: build-linux
        run: ./gradlew jre build -Pplatform=linux -Ptests=Unit
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distributions/ntag-${VERSION}-linux_bin.tar.gz
          asset_name: ntag-${VERSION}-linux_bin.tar.gz
          asset_content_type: application/gzip
  windows_release:
    runs-on: [windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Get NTag Version
        run: echo "VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
          architecture: x64
      - name: Build Windows Version with Gradle
        id: build-windows
        run: ./gradlew jre build -x test -Pplatform=win
      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/distributions/ntag-${VERSION}-win_bin.zip
          asset_name: ntag-${VERSION}-win_bin.zip
          asset_content_type: application/zip
